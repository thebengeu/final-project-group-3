<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKMapperOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKMapperOperation</TokenIdentifier>
			<Abstract type="html">RKMapperOperation is an NSOperation subclass that implements object mapping for opaque object representations. Given a dictionary or an array of dictionaries that represent objects and a dictionary describing how to map the representations, the mapper will transform the source representations into NSObject or NSManagedObject instances. Mapper operations are used to map object representations from Foundation object representations, such as those deserialized from a JSON or XML document or loaded from a file. Not all the mappings specified in the mappings dictionary are required to match content in the source object for the operation to succeed. However, if none of the mappable key paths in the mappings dictionary match the source object then the operation will fail and the error property will be set to an NSError object in the RKErrorDomain domain with an error code value of RKMappingErrorNotFound.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>
			
			<NodeRef refid="22"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/initWithRepresentation:mappingsDictionary:</TokenIdentifier>
			<Abstract type="html">Initializes the operation with a source object and a mappings dictionary.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>- (id)initWithRepresentation:(id)representation mappingsDictionary:(NSDictionary *)mappingsDictionary</Declaration>
			<Parameters>
				<Parameter>
					<Name>representation</Name>
					<Abstract type="html">An NSDictionary or NSArray of NSDictionary object representations to be mapped into local domain objects.</Abstract>
				</Parameter><Parameter>
					<Name>mappingsDictionary</Name>
					<Abstract type="html">An NSDictionary wherein the keys are mappable key paths in object and the values are RKMapping objects specifying how the representations at its key path are to be mapped.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the given object and and dictionary of key paths to mappings.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithRepresentation:mappingsDictionary:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setError:</TokenIdentifier>
			<Abstract type="html">The error, if any, that occurred during the mapping process.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/error</TokenIdentifier>
			<Abstract type="html">The error, if any, that occurred during the mapping process.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setMappingResult:</TokenIdentifier>
			<Abstract type="html">The result of the mapping process. A nil value indicates that no mappable object representations were found and no mapping was performed.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) RKMappingResult *mappingResult</Declaration>
			
			
			<Anchor>//api/name/mappingResult</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/mappingResult</TokenIdentifier>
			<Abstract type="html">The result of the mapping process. A nil value indicates that no mappable object representations were found and no mapping was performed.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) RKMappingResult *mappingResult</Declaration>
			
			
			<Anchor>//api/name/mappingResult</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setMappingInfo:</TokenIdentifier>
			<Abstract type="html">Returns a dictionary containing information about the mappings applied during the execution of the operation. The keys of the dictionary are keyPaths into the mappingResult for values that were mapped and the values are the corresponding RKPropertyMapping objects used to perform the mapping.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSDictionary *mappingInfo</Declaration>
			
			
			<Anchor>//api/name/mappingInfo</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/mappingInfo</TokenIdentifier>
			<Abstract type="html">Returns a dictionary containing information about the mappings applied during the execution of the operation. The keys of the dictionary are keyPaths into the mappingResult for values that were mapped and the values are the corresponding RKPropertyMapping objects used to perform the mapping.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSDictionary *mappingInfo</Declaration>
			
			
			<Anchor>//api/name/mappingInfo</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setRepresentation:</TokenIdentifier>
			<Abstract type="html">The representation of one or more objects against which the mapping is performed.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) id representation</Declaration>
			
			
			<Anchor>//api/name/representation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/representation</TokenIdentifier>
			<Abstract type="html">The representation of one or more objects against which the mapping is performed.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) id representation</Declaration>
			
			
			<Anchor>//api/name/representation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setMappingsDictionary:</TokenIdentifier>
			<Abstract type="html">A dictionary of key paths to RKMapping objects specifying how object representations in the representation are to be mapped.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSDictionary *mappingsDictionary</Declaration>
			
			
			<Anchor>//api/name/mappingsDictionary</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/mappingsDictionary</TokenIdentifier>
			<Abstract type="html">A dictionary of key paths to RKMapping objects specifying how object representations in the representation are to be mapped.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSDictionary *mappingsDictionary</Declaration>
			
			
			<Anchor>//api/name/mappingsDictionary</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setTargetObject:</TokenIdentifier>
			<Abstract type="html">The target object of the mapper. When configured, all object mapping will target the specified object.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id targetObject</Declaration>
			
			
			<Anchor>//api/name/targetObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/targetObject</TokenIdentifier>
			<Abstract type="html">The target object of the mapper. When configured, all object mapping will target the specified object.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id targetObject</Declaration>
			
			
			<Anchor>//api/name/targetObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setMappingOperationDataSource:</TokenIdentifier>
			<Abstract type="html">The data source for the underlying RKMappingOperation objects that perform the mapping work configured by the mapper.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) id&lt;RKMappingOperationDataSource&gt; mappingOperationDataSource</Declaration>
			
			
			<Anchor>//api/name/mappingOperationDataSource</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/mappingOperationDataSource</TokenIdentifier>
			<Abstract type="html">The data source for the underlying RKMappingOperation objects that perform the mapping work configured by the mapper.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) id&lt;RKMappingOperationDataSource&gt; mappingOperationDataSource</Declaration>
			
			
			<Anchor>//api/name/mappingOperationDataSource</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate for the mapper operation.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMapperOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for the mapper operation.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMapperOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/setMetadata:</TokenIdentifier>
			<Abstract type="html">A dictionary of metadata that is available for mappping by any mapping operation started by the receiver.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMapperOperation/metadata</TokenIdentifier>
			<Abstract type="html">A dictionary of metadata that is available for mappping by any mapping operation started by the receiver.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/execute:</TokenIdentifier>
			<Abstract type="html">Executes the mapper operation to completion.</Abstract>
			<DeclaredIn>RKMapperOperation.h</DeclaredIn>			
			
			<Declaration>- (BOOL)execute:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">A pointer to an NSError object to set in the event an error occurs during execution.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A Boolean value that indicates if the operation completed successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/execute:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/mapRepresentation:atKeyPath:usingMapping:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RKMapperOperation_Private.h</DeclaredIn>			
			
			<Declaration>- (id)mapRepresentation:(id)mappableObject atKeyPath:(NSString *)keyPath usingMapping:(RKMapping *)mapping</Declaration>
			
			
			<Anchor>//api/name/mapRepresentation:atKeyPath:usingMapping:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/mapRepresentations:atKeyPath:usingMapping:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RKMapperOperation_Private.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)mapRepresentations:(NSArray *)mappableObjects atKeyPath:(NSString *)keyPath usingMapping:(RKMapping *)mapping</Declaration>
			
			
			<Anchor>//api/name/mapRepresentations:atKeyPath:usingMapping:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/mapRepresentation:toObject:atKeyPath:usingMapping:metadata:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RKMapperOperation_Private.h</DeclaredIn>			
			
			<Declaration>- (BOOL)mapRepresentation:(id)mappableObject toObject:(id)destinationObject atKeyPath:(NSString *)keyPath usingMapping:(RKMapping *)mapping metadata:(NSDictionary *)metadata</Declaration>
			
			
			<Anchor>//api/name/mapRepresentation:toObject:atKeyPath:usingMapping:metadata:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMapperOperation/objectForRepresentation:withMapping:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RKMapperOperation_Private.h</DeclaredIn>			
			
			<Declaration>- (id)objectForRepresentation:(id)representation withMapping:(RKMapping *)mapping</Declaration>
			
			
			<Anchor>//api/name/objectForRepresentation:withMapping:</Anchor>
		</Token>
		
	</File>
</Tokens>