<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKBenchmark.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKBenchmark</TokenIdentifier>
			<Abstract type="html">The RKBenchmark classes provide a simple, lightweight interface for quickly benchmarking the performance of units of code. Benchmark objects can be used procedurally, by manually starting &amp;amp; stopping the benchmark, or using a block interface to measure the execution time of the block.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/setName:</TokenIdentifier>
			<Abstract type="html">A name for the benchmark. Can be nil.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKBenchmark/name</TokenIdentifier>
			<Abstract type="html">A name for the benchmark. Can be nil.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/setStartTime:</TokenIdentifier>
			<Abstract type="html">The start time of the benchmark as an absolute time value.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CFAbsoluteTime startTime</Declaration>
			
			
			<Anchor>//api/name/startTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKBenchmark/startTime</TokenIdentifier>
			<Abstract type="html">The start time of the benchmark as an absolute time value.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CFAbsoluteTime startTime</Declaration>
			
			
			<Anchor>//api/name/startTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/setEndTime:</TokenIdentifier>
			<Abstract type="html">The end time of the benchmark as an absolute time value.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CFAbsoluteTime endTime</Declaration>
			
			
			<Anchor>//api/name/endTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKBenchmark/endTime</TokenIdentifier>
			<Abstract type="html">The end time of the benchmark as an absolute time value.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CFAbsoluteTime endTime</Declaration>
			
			
			<Anchor>//api/name/endTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/setElapsedTime:</TokenIdentifier>
			<Abstract type="html">The elapsed time of the benchmark as determined by subtracting the end time from the start time. Returns zero until the benchmark has been stopped.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CFTimeInterval elapsedTime</Declaration>
			
			
			<Anchor>//api/name/elapsedTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKBenchmark/elapsedTime</TokenIdentifier>
			<Abstract type="html">The elapsed time of the benchmark as determined by subtracting the end time from the start time. Returns zero until the benchmark has been stopped.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CFTimeInterval elapsedTime</Declaration>
			
			
			<Anchor>//api/name/elapsedTime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKBenchmark/report:executionBlock:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>+ (id)report:(NSString *)info executionBlock:(void ( ^ ) ( void ))block</Declaration>
			
			
			<Anchor>//api/name/report:executionBlock:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKBenchmark/measureWithExecutionBlock:</TokenIdentifier>
			<Abstract type="html">Performs a benchmark and returns a time interval measurement of the total time elapsed during the execution of the blocl.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>+ (CFTimeInterval)measureWithExecutionBlock:(void ( ^ ) ( void ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">A block to execute and measure the elapsed time during execution.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A time interval equal to the total time elapsed during execution.</Abstract></ReturnValue>
			<Anchor>//api/name/measureWithExecutionBlock:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKBenchmark/instanceWithName:</TokenIdentifier>
			<Abstract type="html">Retrieves or creates a benchmark object instance with a given name.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>+ (RKBenchmark *)instanceWithName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">A name for the benchmark.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new or existing benchmark object with the given name.</Abstract></ReturnValue>
			<Anchor>//api/name/instanceWithName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKBenchmark/benchmarkWithName:</TokenIdentifier>
			<Abstract type="html">Creates and returns a benchmark object with a name.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>+ (id)benchmarkWithName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">A name for the benchmark.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new benchmark object with the given name.</Abstract></ReturnValue>
			<Anchor>//api/name/benchmarkWithName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/initWithName:</TokenIdentifier>
			<Abstract type="html">Initializes a new benchmark object with a name.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>- (id)initWithName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name to initialize the receiver with.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the given name.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/run:</TokenIdentifier>
			<Abstract type="html">Runs a benchmark by starting the receiver, executing the block, and then stopping the benchmark object.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>- (void)run:(void ( ^ ) ( void ))executionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>executionBlock</Name>
					<Abstract type="html">A block to execute as the body of the benchmark.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/run:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/start</TokenIdentifier>
			<Abstract type="html">Starts the benchmark by recording the start time.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>- (void)start</Declaration>
			
			
			<Anchor>//api/name/start</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/stop</TokenIdentifier>
			<Abstract type="html">Stops the benchmark by recording the stop time.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>- (void)stop</Declaration>
			
			
			<Anchor>//api/name/stop</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKBenchmark/log</TokenIdentifier>
			<Abstract type="html">Logs the current benchmark status. If the receiver has been stopped, the elapsed time of the benchmark is logged. If the benchmark is still running, the total time since the benchmark was started is logged.</Abstract>
			<DeclaredIn>RKBenchmark.h</DeclaredIn>			
			
			<Declaration>- (void)log</Declaration>
			
			
			<Anchor>//api/name/log</Anchor>
		</Token>
		
	</File>
</Tokens>